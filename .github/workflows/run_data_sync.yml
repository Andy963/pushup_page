name: Run Data Sync

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - master
    paths:
      - pushup_page/strava_sync.py
      - pushup_page/gen_svg.py
      - pdm.lock

env:
  RUN_TYPE: strava
  ATHLETE: ${{ vars.ATHLETE }}
  TITLE: ${{ vars.TITLE }}
  TITLE_GRID: ${{ vars.TITLE_GRID }}
  SAVE_DATA_IN_GITHUB_CACHE: false
  DATA_CACHE_PREFIX: 'pushup_data'
  BUILD_GH_PAGES: true

jobs:
  sync:
    name: Sync
    runs-on: ubuntu-latest
    environment: sync
    outputs:
      SAVE_DATA_IN_GITHUB_CACHE: ${{ steps.set_output.outputs.SAVE_DATA_IN_GITHUB_CACHE }}
      DATA_CACHE_PREFIX: ${{ steps.set_output.outputs.DATA_CACHE_PREFIX }}
      BUILD_GH_PAGES: ${{ steps.set_output.outputs.BUILD_GH_PAGES }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: 'pdm.lock'

      - name: Install dependencies
        run: |
          pip install pdm
          pdm install

      - name: Cache Data Files
        if: env.SAVE_DATA_IN_GITHUB_CACHE == 'true'
        uses: actions/cache@v4
        with:
          path: |
            assets
            pushup_page/data.db
          key: ${{ env.DATA_CACHE_PREFIX }}-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ${{ env.DATA_CACHE_PREFIX }}-${{ github.sha }}-
            ${{ env.DATA_CACHE_PREFIX }}-

      - name: Run sync Strava script
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: |
          pdm run python -m pushup_page.strava_sync ${{ secrets.CLIENT_ID }} ${{ secrets.CLIENT_SECRET }} ${{ secrets.REFRESH_TOKEN }}

      - name: Make svg GitHub profile
        env:
          TITLE: ${{ env.TITLE }}
          TITLE_GRID: ${{ env.TITLE_GRID }}
          ATHLETE: ${{ env.ATHLETE }}
        run: |
          pdm run python -m pushup_page.gen_svg --from-db --title "$TITLE" --type github --github-style "align-firstday" --athlete "$ATHLETE" --output assets/github_2025.svg --use-localtime

      - name: Generate summary charts
        run: |
          pdm run python -m pushup_page.pushup_summary

      - name: Commit and push Data & SVG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name ${{ env.ATHLETE }}
          git config user.email ${{ env.ATHLETE }}@users.noreply.github.com
          git add assets/github_2025.svg assets/yearly_chart.svg assets/monthly_chart.svg assets/weekly_chart.svg data.db pushup_data.csv
          git commit -m "Update SVG charts, data.db, and pushup_data.csv" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git push origin HEAD:master

      - name: Set Output
        id: set_output
        env:
          SAVE_DATA_IN_GITHUB_CACHE: ${{ env.SAVE_DATA_IN_GITHUB_CACHE }}
          DATA_CACHE_PREFIX: ${{ env.DATA_CACHE_PREFIX }}
          BUILD_GH_PAGES: ${{ env.BUILD_GH_PAGES }}
        run: |
          echo "SAVE_DATA_IN_GITHUB_CACHE=$SAVE_DATA_IN_GITHUB_CACHE" >> "$GITHUB_OUTPUT"
          echo "DATA_CACHE_PREFIX=$DATA_CACHE_PREFIX" >> "$GITHUB_OUTPUT"
          echo "BUILD_GH_PAGES=$BUILD_GH_PAGES" >> "$GITHUB_OUTPUT"
